{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\IdeaProjects\\\\Full-Proyect\\\\frontend-products\\\\src\\\\HomeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [mail, setMail] = useState('nada@gmail.com');\n  const [password, setPassword] = useState('1234');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/verifierUser?mail=${encodeURIComponent(mail)}&password=${encodeURIComponent(password)}`);\n      const text = await response.text();\n      if (text.includes(\"MainHome\")) {\n        // Extraer el nombre del usuario si lo necesitas\n        const userName = mail.split('@')[0];\n        window.location.href = `/api/${userName}/MainHome`;\n      } else {\n        alert(\"Credenciales inválidas. Intenta de nuevo.\");\n      }\n    } catch (error) {\n      alert(\"Error de conexión con el servidor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"mail\",\n      children: \"Mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"mail\",\n      name: \"mail\",\n      value: mail,\n      onChange: e => setMail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Subir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"i1Qwxz8SExu0vSiMDC9dXinhY2I=\");\n_c = Form;\nexport default Form;\n\n/*\r\nimport React from 'react';\r\n\r\n\r\n//Archivo actual -> HomeForm.js\r\n//Ventana principal de la aplicación\r\n//Para verificar usuarios\r\nfunction Form() {\r\n  return (\r\n   \r\n    //Los atributo name=\"mail\" y name=\"password\"\r\n    // deben coincidir\r\n     // con los nombres esperados en @RequestParam.\r\n    \r\n  <form method=\"get\" action=\"/api/verifierUser\">\r\n  <label htmlFor=\"mail\">Mail</label>\r\n  <input type=\"email\" id=\"mail\" name=\"mail\" required  defaultValue={\"nada@gmail.com\"}/>\r\n\r\n  <label htmlFor=\"password\">Password</label>\r\n  <input type=\"password\" id=\"password\" name=\"password\" required defaultValue={\"1234\"} />\r\n\r\n  <button type=\"submit\">Subir</button>\r\n  </form>\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Form;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","mail","setMail","password","setPassword","handleSubmit","e","preventDefault","response","fetch","encodeURIComponent","text","includes","userName","split","window","location","href","alert","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/guill/IdeaProjects/Full-Proyect/frontend-products/src/HomeForm.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nfunction Form() {\r\n  const [mail, setMail] = useState('nada@gmail.com');\r\n  const [password, setPassword] = useState('1234');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`/api/verifierUser?mail=${encodeURIComponent(mail)}&password=${encodeURIComponent(password)}`);\r\n      const text = await response.text();\r\n\r\n      if (text.includes(\"MainHome\")) {\r\n        // Extraer el nombre del usuario si lo necesitas\r\n        const userName = mail.split('@')[0];\r\n        window.location.href = `/api/${userName}/MainHome`;\r\n      } else {\r\n        alert(\"Credenciales inválidas. Intenta de nuevo.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error de conexión con el servidor.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"mail\">Mail</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"mail\"\r\n        name=\"mail\"\r\n        value={mail}\r\n        onChange={(e) => setMail(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\">Subir</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n/*\r\nimport React from 'react';\r\n\r\n\r\n//Archivo actual -> HomeForm.js\r\n//Ventana principal de la aplicación\r\n//Para verificar usuarios\r\nfunction Form() {\r\n  return (\r\n   \r\n    //Los atributo name=\"mail\" y name=\"password\"\r\n    // deben coincidir\r\n     // con los nombres esperados en @RequestParam.\r\n    \r\n  <form method=\"get\" action=\"/api/verifierUser\">\r\n  <label htmlFor=\"mail\">Mail</label>\r\n  <input type=\"email\" id=\"mail\" name=\"mail\" required  defaultValue={\"nada@gmail.com\"}/>\r\n\r\n  <label htmlFor=\"password\">Password</label>\r\n  <input type=\"password\" id=\"password\" name=\"password\" required defaultValue={\"1234\"} />\r\n\r\n  <button type=\"submit\">Subir</button>\r\n  </form>\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Form;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}